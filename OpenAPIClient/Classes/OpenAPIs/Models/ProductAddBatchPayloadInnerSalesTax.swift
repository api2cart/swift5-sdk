//
// ProductAddBatchPayloadInnerSalesTax.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProductAddBatchPayloadInnerSalesTax: Codable, JSONEncodable, Hashable {

    public static let taxPercentRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public var taxPercent: Double?
    public var taxable: Bool?

    public init(taxPercent: Double? = nil, taxable: Bool? = nil) {
        self.taxPercent = taxPercent
        self.taxable = taxable
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case taxPercent = "tax_percent"
        case taxable
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(taxPercent, forKey: .taxPercent)
        try container.encodeIfPresent(taxable, forKey: .taxable)
    }
}

