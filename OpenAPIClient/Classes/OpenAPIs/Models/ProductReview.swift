//
// ProductReview.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ProductReview: Codable, JSONEncodable, Hashable {

    public var id: String?
    public var productId: String?
    public var customerId: String?
    public var nickName: String?
    public var email: String?
    public var summary: String?
    public var message: String?
    public var rating: Double?
    public var ratings: [ProductReviewRating]?
    public var status: String?
    public var createdTime: A2CDateTime?
    public var modifiedTime: A2CDateTime?
    public var medias: [Media]?
    public var additionalFields: AnyCodable?
    public var customFields: AnyCodable?

    public init(id: String? = nil, productId: String? = nil, customerId: String? = nil, nickName: String? = nil, email: String? = nil, summary: String? = nil, message: String? = nil, rating: Double? = nil, ratings: [ProductReviewRating]? = nil, status: String? = nil, createdTime: A2CDateTime? = nil, modifiedTime: A2CDateTime? = nil, medias: [Media]? = nil, additionalFields: AnyCodable? = nil, customFields: AnyCodable? = nil) {
        self.id = id
        self.productId = productId
        self.customerId = customerId
        self.nickName = nickName
        self.email = email
        self.summary = summary
        self.message = message
        self.rating = rating
        self.ratings = ratings
        self.status = status
        self.createdTime = createdTime
        self.modifiedTime = modifiedTime
        self.medias = medias
        self.additionalFields = additionalFields
        self.customFields = customFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case productId = "product_id"
        case customerId = "customer_id"
        case nickName = "nick_name"
        case email
        case summary
        case message
        case rating
        case ratings
        case status
        case createdTime = "created_time"
        case modifiedTime = "modified_time"
        case medias
        case additionalFields = "additional_fields"
        case customFields = "custom_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(productId, forKey: .productId)
        try container.encodeIfPresent(customerId, forKey: .customerId)
        try container.encodeIfPresent(nickName, forKey: .nickName)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(summary, forKey: .summary)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(rating, forKey: .rating)
        try container.encodeIfPresent(ratings, forKey: .ratings)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(createdTime, forKey: .createdTime)
        try container.encodeIfPresent(modifiedTime, forKey: .modifiedTime)
        try container.encodeIfPresent(medias, forKey: .medias)
        try container.encodeIfPresent(additionalFields, forKey: .additionalFields)
        try container.encodeIfPresent(customFields, forKey: .customFields)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ProductReview: Identifiable {}
