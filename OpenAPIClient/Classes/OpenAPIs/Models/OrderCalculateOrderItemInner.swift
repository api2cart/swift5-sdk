//
// OrderCalculateOrderItemInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OrderCalculateOrderItemInner: Codable, JSONEncodable, Hashable {

    /** Defines orders specified by order item id */
    public var orderItemId: String
    /** Defines orders specified by order item quantity */
    public var orderItemQuantity: Int
    /** Ordered product variant. Where x is order item ID */
    public var orderItemVariantId: String?
    public var orderItemOption: [OrderCalculateOrderItemInnerOrderItemOptionInner]?

    public init(orderItemId: String, orderItemQuantity: Int, orderItemVariantId: String? = nil, orderItemOption: [OrderCalculateOrderItemInnerOrderItemOptionInner]? = nil) {
        self.orderItemId = orderItemId
        self.orderItemQuantity = orderItemQuantity
        self.orderItemVariantId = orderItemVariantId
        self.orderItemOption = orderItemOption
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case orderItemId = "order_item_id"
        case orderItemQuantity = "order_item_quantity"
        case orderItemVariantId = "order_item_variant_id"
        case orderItemOption = "order_item_option"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(orderItemId, forKey: .orderItemId)
        try container.encode(orderItemQuantity, forKey: .orderItemQuantity)
        try container.encodeIfPresent(orderItemVariantId, forKey: .orderItemVariantId)
        try container.encodeIfPresent(orderItemOption, forKey: .orderItemOption)
    }
}

